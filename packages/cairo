package_name=cairo
package_version=1.14.6
tarball_suffix=xz
build_dependencies="zlib expat libpng libffi"
iscustombuild=1
no_check=1 # TODO: 1 test will be FAIL: check-def.sh
# FAIL: check-def.sh
# ==================
# Checking that .libs/libcairo.so has the same symbol list as cairo.def
# --- cairo.def
# +++ -
# @@ -1,4 +1,9 @@
# EXPORTS
#+__bss_start
#+_edata
#+_end
#+_fini
#+_init
# cairo_append_path
# cairo_arc
# cairo_arc_negative

# custom build because zlib not found automatically by this build system
custombuild(){
    rm -rf builddir
    mkdir -p builddir   # do everything in builddir for tidiness
    cd builddir
    if [ "$url" == "" ]; then
        # if no absolute $url defined, then assume, that we have relative url 
        # $rel_url
        url=$mirror_prefix/$rel_url
    fi
    wget -O archive $url
    tar xvf archive
    rm archive
    cd *   # cd into the package directory
    patch -p1 < ../../packages/cairo-build.patch   # patching the build system so zlib is found TODO: send the patch upstream
    autoreconf
    LDFLAGS="-L$installdirectory/zlib/lib -Wl,-rpath=$installdirectory/zlib/lib" ./configure --prefix=$installdirectory/$package_fullname/   # TODO: why it doesn't work without LDFLAGS
    make -j
    if test -z $no_check   # run the make check, unless $no_check is set for 
                           # this package definition
    then make -j check || make -j test
    fi
    make install
    ln -sv $installdirectory/$package_fullname $installdirectory/$package_name
    ln -sv $installdirectory/$package_name/bin/* /bin/ || true   # don't crash 
                                            # if the links are already there
    if [ -d "$installdirectory/$package_name/lib/pkgconfig" ]; then
        ln -svf $installdirectory/$package_name/lib/pkgconfig/* \
        $installdirectory/pkgconf/lib/pkgconfig/   # install pkg-config files
    fi
    cd ../..
    rm -r builddir
}
