package_name=Python
package_version=3.8.0
tarball_suffix=xz
build_dependencies="libressl libffi xz"
no_check=1   # don't hesitate to fix it


# The package python3-better is better than the normal python3, but comes with more dependencies and is dependent on incompatible version of other packages
#
#
# custom build because of rpath for libressl, zlib and libffi
# also because of a hack to find zlib headers
custombuild() {
	builddir="builddir-$package_fullname"  # build directory is "builddir" followed by the name of the package, which allows multiple builds of different software in parallel
	rm -rf $builddir
	mkdir -p $builddir   # do everything in builddir for tidiness
	cd $builddir

	# NOTE: for ssl support, it is necessary to have the latest libressl 2.9.1 from ports.git, the old one won't work for ssl support
	# install libressl-2.9.1, but don't symlink to it, leave default Axiom libressl
	# we do it here (we also could make libressl-2.9.1.sh), to make clear we need id only for python3 pip3 purpose
	rm -rf /opt/libressl-2.9.1
	wget http://mirrors.tassig.com/libressl/libressl-2.9.1.tar.gz
	tar xf libressl-2.9.1.tar.gz
	cd libressl-2.9.1
	./configure --prefix=/opt/libressl-2.9.1
	make -j
	make install
	cd ../
	rm -r libressl-2.9.1

	wget -O archive $url
	tar xvf archive
	rm archive
	cd *   # cd into the package directory
	
	# NOTE: instead of messing with libressl.pc file, we simply navigate confiogure to libressl-2.9.1
	export CPPFLAGS="-I/opt/libffi/lib/libffi-3.2 -I/opt/xz/include/ -I/opt/zlib/include -I/opt/libressl-2.9.1/include"
	export LDFLAGS="-L/opt/libressl-2.9.1/lib -Wl,-rpath=/opt/libressl-2.9.1/lib -Wl,-rpath=/opt/zlib/lib -L /opt/zlib/lib -L/opt/libffi-3.2/lib64 -Wl,-rpath=/opt/libffi-3.2/lib64 -L/opt/xz/lib -Wl,-rpath=/opt/xz/lib"
	./configure --prefix=$installdirectory/Python-$package_version
	
	ncpu=`cat /proc/cpuinfo | grep processor | wc -l`
	make -j$ncpu

	if test -z $no_check   # run the make check, unless $no_check is set for 
						   # this package definition
	then make -j check || make -j test
	fi
	make install
	
	
	
	
	# we add the symlinks directly
	ln -svn $installdirectory/$package_fullname $installdirectory/$package_name || true
	ln -svf $installdirectory/$package_name/bin/* $bindirectory || true   # don't crash if the links are already there
	
	# upgrade pip, necessary so that the pip binary is created
	pip3 install --upgrade pip
	
	# do it again, because pip binary has been added
	ln -svf $installdirectory/$package_name/bin/* $bindirectory || true
	
	if [ -d "$installdirectory/$package_fullname/lib/pkgconfig" ]; then
		ln -svf $installdirectory/$package_fullname/lib/pkgconfig/* $installdirectory/pkgconf/lib/pkgconfig/   # install pkg-config files
	fi
	cd ../..
	rm -r $builddir
}
