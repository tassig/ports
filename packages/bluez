package_name=bluez
package_version=5.44
tarball_suffix=xz
build_dependencies="libical dbus readline glib"
iscustombuild=1

##########################
#
# bluez
#
# bluez is a Bluetooth stack for linux
# 
##########################


# custom build because configure will not link with readline and ncurses. And currently, need to disable obex
custombuild(){
	rm -rf builddir
	mkdir -p builddir   # do everything in builddir for tidiness
	cd builddir
	wget -O archive $url
	tar xvf archive
	rm archive
	cd *   # cd into the package directory
 
	LDFLAGS="-L$installdirectory/readline/lib -L$installdirectory/ncurses/lib -lncurses -lreadline \
			-Wl,-rpath,$installdirectory/ncurses/lib \
			-Wl,-rpath,$installdirectory/readline/lib" \
		CFLAGS="-I$installdirectory/readline/include" \
		ICAL_CFLAGS="-I$installdirectory/libical/include" \
		ICAL_LIBS="-L$installdirectory/libical/lib64 -Wl,-rpath,$installdirectory/libical/lib64 -lical -licalvcal" \
		DBUS_CFLAGS="-I$installdirectory/dbus/include/dbus-1.0 \
			-I$installdirectory/dbus/lib/dbus-1.0/include" \
		DBUS_LIBS="-L$installdirectory/dbus/lib -Wl,-rpath,$installdirectory/dbus/lib -ldbus-1" \
                ALSA_CFLAGS="-I/opt/alsa-lib/include" \
                ALSA_LDFLAGS="-L/opt/alsa-lib/lib -lasound -Wl,-rpath,/opt/alsa-lib/lib" \
		./configure --prefix=$installdirectory/$package_fullname \
			--disable-udev \
			--disable-systemd \
			--with-dbusconfdir=$installdirectory/$package_fullname/etc/ \
			--with-dbussystembusdir=/var/run/$package_name \
			--localstatedir=/var/ \
			--enable-library
			
			
	# patch kernel source header to avoid redefinition error, reversed later
	patch -p0 < ../../packages/bluez_kernel_headers.patch
	
	# patch to bluetoothctl for btsetup
	cp ../../packages/bluez-btsetup/Makefile.patch .
	patch Makefile Makefile.patch
	cp ../../packages/bluez-btsetup/client-agent.patch client/
	cp ../../packages/bluez-btsetup/client-main.patch client/
	cp ../../packages/bluez-btsetup/unixsocket.c client/
	cp ../../packages/bluez-btsetup/unixsocket.h client/
	cd client/
	patch main.c client-main.patch
	patch agent.c client-agent.patch
	cd ../
	
	ncpu=`cat /proc/cpuinfo | grep processor | wc -l`
	make -j$ncpu
	if test -z $no_check   # run the make check, unless $no_check is set for this package definition
	then make -j$ncpu check || make -j$ncpu test
	fi
	make install
	
	patch -p0 -R < ../../packages/bluez_kernel_headers.patch
	
	
	# copy configuration files
	mkdir -p $installdirectory/$package_fullname/etc/bluetooth/
	sed -i '/AutoEnable=/c\AutoEnable=true' src/main.conf
	sed -i '/FastConnectable=/c\FastConnectable=true' src/main.conf
	cp src/main.conf $installdirectory/$package_fullname/etc/bluetooth/
	cp profiles/input/input.conf $installdirectory/$package_fullname/etc/bluetooth/
	
	# install bluetoothd wrapper
	cp ../../packages/bluez_bluetoothd_wrapper $installdirectory/$package_fullname/bin/bluetoothd_wrapper
	
	# install bluetoothctl-btsetup wrapper
	cp ../..//packages/bluez-btsetup/bluetoothctl-btsetup $installdirectory/$package_fullname/bin/

	# install a configuration file for dbus
	cp ../../packages/bluez_bluetooth.conf $installdirectory/$package_fullname/etc/dbus-1/system.d/bluetooth.conf
	
	
	ln -sv $installdirectory/$package_fullname $installdirectory/$package_name
	ln -sv $installdirectory/$package_name/bin/* /bin/ || true   # don't crash if the links are already there
	if [ -d "$installdirectory/$package_name/lib/pkgconfig" ]; then
		ln -svf $installdirectory/$package_name/lib/pkgconfig/* \
		$installdirectory/pkgconf/lib/pkgconfig/   # install pkg-config files
	fi
	cd ../..
	rm -r builddir
	
	
	
	
	
	mkdir -p /var/run/bluez


}
