package_name=qt
package_version=5.7.0
url=http://download.qt.io/official_releases/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz   # TODO: move to tassig
build_dependencies=   # there are many
iscustombuild=1


# TODO:
# - getting this warning at configure time: WARNING: Could not find XKB config root, use -xkb-config-root to set a path to 
# XKB configuration data. This is required for keyboard input support.


#
# Requirements: http://doc.qt.io/qt-5/linux-requirements.html
#
# you need to use -qt-xcb to configure so qt uses its own xcb, or you would need to use Longhorn's xcb we would need to add 'xcb-image', 'xcb-keysyms', 'xcb-icccm' during the x.org build.
# TODO: it's probably to install these xcb packages and make Qt use Longhorn's xcb instead of its own xcb
#
# -skip qtwebengine can be used to reduced the build size
#

custombuild(){
	PREFIX=/opt/$package_name-$package_version

	wget $url
	tar xvf qt-everywhere-opensource-src-5.7.0.tar.gz
	cd qt-everywhere-opensource-src-5.7.0
	
	
	# this build systems does not use configure.ac, instead it uses a manually written configure in qtbase/configure, so there are some issues with it, for example it uses a bash feature. So remove that
	patch -p1 < ../packages/qt-build.patch
	
	
	# configure seems to support LDFLAGS (probably passed as arguments) and converts them to QMAKE variables, see qtbase/configure. We don't use this below.
	            
	         
	# -rpath : add qt path to libraries runtime paths TODO: check if needed
	# -R : add a runtime path to libraries
	# -I/opt/xorg/include -L/opt/xorg/lib -R /opt/xorg/lib : used for the configure tests to work properly, for instance to find xrender. The build system should have been using pkg-config for xrender instead. The rpath is actually superfluous, because the build system doesn't test the resulting executables, it just tries to compile them
	# other -R and -L : used to circumvent bugs in the build system
	# send -no-dbus to disable dbus

	
	./configure --prefix=$PREFIX -skip qtwebengine -qt-xcb -no-dbus -opensource -confirm-license -I/opt/xorg/include -L/opt/xorg/lib -R /opt/xorg/lib -R /opt/glib/lib -R /opt/eudev/lib -L/opt/fontconfig/lib -L/opt/freetype/lib -rpath 
	
	# TODO: these -rpath will end up on all Qt libraries, even on the ones that don't need them. This will have the consequence of making startup time of Qt application slow
	# that's why we have to look for a better way to put the -rpath more selectively
	LDFLAGS="-Wl,-rpath,/opt/xorg/lib -Wl,-rpath,/opt/fontconfig/lib -Wl,-rpath,/opt/freetype/lib -Wl,-rpath,/opt/mtdev/lib" make -j4
	make -j4 check
	make install
	
	# links
	ln -sv $PREFIX /opt/$package_name   # link for canonical name
	ln -svf $PREFIX/lib/pkgconfig/*.pc /opt/pkgconf/lib/pkgconfig/
	ln -sv $PREFIX/bin/* /bin/

	# cleanup	
	cd ..
	rm -rf qt-everywhere*
	
	
	# TODO:
	# qmake variables need to be changed in /opt/qt/mkspecs/linux-g++/qmake.conf
	# (QMAKE_INCDIR_X11 , QMAKE_LIBDIR_X11 , QMAKE_RPATHDIR , QMAKE_RPATHLINKDIR)
	# otherwise they would need to be passed by argument to qmake everytime:
	# QMAKE_INCDIR_X11=/opt/xorg/include QMAKE_LIBDIR_X11=/opt/xorg/lib QMAKE_RPATHDIR=/opt/xorg/lib QMAKE_LFLAGS=-L/opt/xorg/lib

}




